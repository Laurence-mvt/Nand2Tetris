// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=ram641, b=ram642, c=ram643, d=ram644, e=ram645, f=ram646, g=ram647, h=ram648);
    RAM64(in=in[0..15], load=ram641, address=address[3..8], out=ram64out1);
    RAM64(in=in[0..15], load=ram642, address=address[3..8], out=ram64out2);
    RAM64(in=in[0..15], load=ram643, address=address[3..8], out=ram64out3);
    RAM64(in=in[0..15], load=ram644, address=address[3..8], out=ram64out4);
    RAM64(in=in[0..15], load=ram645, address=address[3..8], out=ram64out5);
    RAM64(in=in[0..15], load=ram646, address=address[3..8], out=ram64out6);
    RAM64(in=in[0..15], load=ram647, address=address[3..8], out=ram64out7);
    RAM64(in=in[0..15], load=ram648, address=address[3..8], out=ram64out8);
    Mux8Way16(a=ram64out1, b=ram64out2, c=ram64out3, d=ram64out4, e=ram64out5, f=ram64out6, g=ram64out7, h=ram64out8, sel=address[0..2], out=out[0..15]);
}